syntax = "proto2";
package tpm;
message GenerateEd25519KeyPairRequest{

}
message GenerateEd25519KeyPairResponse{
  required bytes encodedBytes = 1;
  required bytes tpmSignature = 2;//sign based on public key of keypair not the encoded bytes
  required bytes teaId = 3;
  required uint32 blockHeightAtSign = 4;
  required bytes blockHashAtSign = 5;
  required bytes publicKeyToSign = 6;
}

message VerifyEd25519KeyPairSignatureRequest{
  required bytes signature = 1;
  required bytes publicKey = 2;//need to verify if this public key is used when sign
  required bytes teaId = 3;
  required uint32 blockHeightAtSign = 4;
}

message VerifyEd25519KeyPairSignatureResponse{
  required bool success = 1;
  required bytes signature = 2;//the sig sent in request:w

}

message VerifySignatureRequest{
  required bytes signature = 1;
  required bytes publicKey = 2;
  required bytes msg = 3;
}

message VerifySignatureResponse{
  required bool result = 1;
}

message RsaDecryptRequest{
  required bytes private_key_pkcs1 = 1;
  required bytes msg = 2;

}

message RsaDecryptResponse{
  required bytes result = 1;
}

message RsaEncryptRequest{
  required bytes public_key_pkcs1 = 1;
  required bytes msg = 2;

}

message RsaEncryptResponse{
  required bytes result = 1;
}

message GetPcrResponse{
  repeated bytes pcrs = 1;
}

message RsaKeyPairPemPcsk1{
  required string publicKey = 1;
  required string privateKey = 2;
}