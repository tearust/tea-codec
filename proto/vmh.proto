syntax = "proto3";
package vmh;

import "kvp-provider.proto";
import "ipfs-provider.proto";
import "layer1-provider.proto";
import "runtime-rpc.proto";

message CommandGeneralRequest {
    oneof msg {
        InitRuntimeRequest InitRuntimeRequest = 1;
    }
}

message InitRuntimeRequest {
    string teaId = 1;
    bytes envSettings = 2;
    layer1.Layer1Settings layer1Settings = 3;
    string connId = 4;
}

message VmhInbound {
    string uuid = 1;
    uint32 TypeId = 2;
    VmhMessage VmhMessage = 3;
}

message VmhOutbound {
    string uuid = 1;
    uint32 TypeId = 2;
    string Target = 3;
    VmhMessage VmhMessage = 4;
}

message RelayTcpEndpointRequest {
    string Key = 1;
    uint32 ServerPort = 2;
    uint32 ClientPort = 3;
}

message RelayTcpEndpointResponse {
    bool success = 1;
    string message = 2;
}

message RelayTcpReconfirmResponse {
    bool success = 1;
    string message = 2;
}

message RelayVsockEndpointRequest {
    string Key = 1;
    uint32 ServerPort = 2;
    uint32 ClientPort = 3;
}

message RelayVsockEndpointResponse {
    bool success = 1;
    string message = 2;
}

message RelayChannelMessageResponse {
    bool success = 1;
    bytes data = 2;
}

message ProviderOperationRequest {
    string actor = 1;
    string operation = 2;
    bytes msg = 3;
}

message ProviderOperationResponse {
    string actor = 1;
    bytes msg = 2;
}

message VmhMessage {
    oneof msg {
        kvp.GetRequest GetRequest = 1;
        kvp.GetResponse GetResponse = 2;
        kvp.SetRequest SetRequest = 3;
        kvp.SetResponse SetResponse = 4;
    }
}

message OutboundRequest {
    string uuid = 1;
    string channel = 2;
    oneof msg {
        ProviderOperationRequest ProviderOperationRequest = 3;
        rpc.AdapterClientRequest AdapterClientRequest = 4;
        rpc.HttpGeneralRequest HttpGeneralRequest = 5;
    }
}

message OutboundResponse {
    string uuid = 1;
    string actor = 2;
    oneof msg {
        ProviderOperationResponse ProviderOperationResponse = 3;
        ipfs.FindProvidersResponse IpfsFindProvidersResponse = 4;
        ipfs.FindProviderInvokeError IpfsFindProviderInvokeError = 5;
    }
}

message RegisterDispatcherRequest {
    repeated uint32 typeIds = 1;
}

message RegisterHttpDispatcherRequest {
    repeated string actions = 1;
}

message NetworkDataLenRequest {
    string uuid = 1;
}

message NetworkDataLenResponse {
   uint64 len = 1;
   string error = 2;
}

message RegisteredActorsRequest {
}

message RegisteredActorsResponse {
    repeated string actors = 1;
}