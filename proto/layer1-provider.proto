syntax = "proto3";
package layer1;

message Layer1Inbound {
    oneof msg {
        TappTopupEvent TappTopupEvent = 1;
        TappHostedEvent TappHostedEvent = 2;
        TappUnhostedEvent TappUnhostedEvent = 3;
        NewBlockEvent NewBlockEvent = 4;
        TappBecomeActiveEvent TappBecomeActiveEvent = 5;
    }
}

message Layer1Outbound {
    oneof msg {
        ApiInfoRequest ApiInfoRequest = 1;
        SendTxRequest SendTxRequest = 2;
        TappInfoRequest TappInfoRequest = 3;
        ListTappsRequest ListTappsRequest = 4;
    }
}

message ConstructExtrinsicRequest {
    bytes toPublicKey = 1;
    bytes amount = 2;
    bytes privateKey = 3;
    SubstrateApiInfo substrateApiInfo = 4;
}

message ConstructExtrinsicResponse {
    bytes rawTransaction = 1;
}

message SendTxRequest {
    bytes rawTransaction = 1;
}

message SendTxResponse {
    bool success = 1;
}

message ApiInfoRequest {
}

message ApiInfoResponse {
    SubstrateApiInfo substrateApiInfo = 1;
}

message TappInfoRequest {
    uint64 tappId = 1;
}

message TappInfoResponse {
    uint64 tappId = 1;
    bytes name = 2;
    bytes link = 3;
}

message ListTappsRequest {
    bool activeOnly = 1;
}

message ListTappResponse {
    repeated uint64 tappIds = 1;
}

message SubstrateApiInfo {
    bytes header = 1; // finalized block header serialized with serde
    uint64 period = 2;
    bytes head = 3; // finalized block hash
}

message Layer1Settings {
    uint32 runtimeSpecVersion = 1;
    uint32 runtimeTransactionVersion = 2;
    bytes genesisHash = 3;
}

message TappTopupEvent {
    uint64 tappId = 1;
    string fromAccount = 2;
    string toAccount = 3;
    bytes amount = 4;
}

message TappHostedEvent {
    uint64 tappId = 1;
    uint64 cmlId = 2;
    bytes teaId = 3;
    bool becomeActive = 4;
}

message TappUnhostedEvent {
    uint64 tappId = 1;
    uint64 cmlId = 2;
    bool becomePending = 3;
}

message TappBecomeActiveEvent {
    uint64 tappId = 1;
    uint32 blockNumber = 2;
    uint32 hostCount = 3;
}

message NewBlockEvent {
    uint32 blockNumber = 1;
    bytes parentHash = 2;
    bytes stateRoot = 3;
    bytes extrinsicRoot = 4;
}

message RegisterLayer1EventRequest {}